name: Create and publish pre-release 

on:
  push:
    branches: ['develop', 'cicd']


jobs:
  create-pre-release:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Parse current version
        run: echo "VERSION=$(cat src/SlicerBoneMorphing.py | grep Version | awk '{print $2}')" >> $GITHUB_ENV

      - name: Create ZIP archive
        run: |
          cd src
          zip -r SlicerBoneMorphing-$VERSION.zip ./*
          cp SlicerBoneMorphing-$VERSION.zip ../

      - name: Create a pre-release
        id: create_pre_release 
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}  
          script: |
            const version = process.env.VERSION;
            const fs = require('fs');
            const body = fs.readFileSync("CHANGELOG.md", 'utf8');

            const response = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: `v${version}`,
              name: version,
              body: body,
              draft: false,
              prerelease: true
            });
            return response.data.release_id;

      - name: Upload ZIP to the release
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const path = require('path');
            const version = process.env.VERSION;
            const fileName = `SlicerBoneMorphing-${version}`;
            const assetPath = path.join(process.cwd(), fileName);
            const fileSize = fs.statSync(assetPath).size;
            
            const fileData = fs.readFileSync(assetPath);

            await github.rest.repos.uploadReleaseAsset({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: ${{ steps.create_pre_release.outputs.release_id }},
              name: fileName,
              data: fileData,
              headers: {
                'content-type': 'application/zip',
                'content-length': fileSize
              }
            });

            console.log('Asset uploaded successfully.');
